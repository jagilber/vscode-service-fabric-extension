{"version":3,"file":"extension.js","sourceRoot":"","sources":["../../src/extension.ts"],"names":[],"mappings":"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","sourcesContent":["//debugger;\r\n// The module 'vscode' contains the VS Code extensibility API\r\n// Import the module and reference it with the alias vscode in your code below\r\n\r\nimport * as vscode from 'vscode';\r\nimport * as pwsh from './commands/powershell-terminal';\r\nimport { addSFService } from './commands/add-sf-service';\r\nimport { buildApplication } from './commands/build-application';\r\nimport { cleanJavaApplication } from './commands/clean-application-java';\r\nimport { createApplication } from './commands/create-application';\r\nimport { deployApplication } from './commands/deploy-application';\r\nimport { publishApplication } from './commands/publish-application';\r\nimport { removeApplication } from './commands/remove-application';\r\nimport { upgradeApplication } from './commands/upgrade-application';\r\nconst terminal = new pwsh.powershellTerminal();\r\n\r\n// this method is called when your extension is activated\r\n// your extension is activated the very first time the command is executed\r\nexport async function activate(context: vscode.ExtensionContext) {\r\n\t// Use the console to output diagnostic information (console.log) and errors (console.error)\r\n\t// This line of code will only be executed once when your extension is activated\r\n\tawait terminal.initialize('Service Fabric');\r\n\tvar results: JSON = null;\r\n\ttry {\r\n\t\tresults = await terminal.sendReceive('import-module servicefabric');\r\n\t\tconsole.log(`results: ${results}`);\r\n\t}\r\n\tcatch {\r\n\t\tresults = await terminal.sendReceive('iwr https://raw.githubusercontent.com/jagilber/powershellScripts/master/serviceFabric/sf-download-cab.ps1 \\\r\n\t\t\t-out $pwd/sf-download-cab.ps1;\\\r\n\t\t\t$pwd/sf-download-cab.ps1 -install $true');\r\n\t\tconsole.log(`results: ${results}`);\r\n\t}\r\n\r\n\t// try {\r\n\t// \tresults = await terminal.sendReceive('import-module servicefabric');\r\n\t// \tconsole.log(`results: ${results}`);\r\n\t// }\r\n\t// catch {\r\n\t// \tresults = await terminal.sendReceive('iwr https://raw.githubusercontent.com/jagilber/powershellScripts/master/serviceFabric/sf-install-sdk.ps1 -out $pwd/sf-install-sdk.ps1;$pwd/sf-install-sdk.ps1');\r\n\t// \tconsole.log(`results: ${results}`);\r\n\t// }\r\n\r\n\tconsole.log('Congratulations, your extension \"service-fabric-services\" is now active!');\r\n\r\n\t// The command has been defined in the package.json file\r\n\t// Now provide the implementation of the command with registerCommand\r\n\t// The commandId parameter must match the command field in package.json\r\n\tlet disposable = vscode.commands.registerCommand('service-fabric-services.helloWorld', () => {\r\n\t\t// The code you place here will be executed every time your command is executed\r\n\r\n\t\t// Display a message box to the user\r\n\t\tvscode.window.showInformationMessage('Hello World from Service Fabric Reliable Services!');\r\n\t});\r\n\r\n\tcontext.subscriptions.push(disposable);\r\n\t// Registering all of the possible commands for interacting with a Service Fabric Project\r\n\tcontext.subscriptions.push(vscode.commands.registerCommand('vscode-sf.addSFService', addSFService));\r\n\tcontext.subscriptions.push(vscode.commands.registerCommand('vscode-sf.buildApplication', buildApplication));\r\n\tcontext.subscriptions.push(vscode.commands.registerCommand('vscode-sf.cleanJavaApplication', cleanJavaApplication));\r\n\tcontext.subscriptions.push(vscode.commands.registerCommand('vscode-sf.createApplication', createApplication));\r\n\tcontext.subscriptions.push(vscode.commands.registerCommand('vscode-sf.deployApplication', deployApplication));\r\n\tcontext.subscriptions.push(vscode.commands.registerCommand('vscode-sf.publishApplication', publishApplication));\r\n\tcontext.subscriptions.push(vscode.commands.registerCommand('vscode-sf.removeApplication', removeApplication));\r\n\tcontext.subscriptions.push(vscode.commands.registerCommand('vscode-sf.upgradeApplication', upgradeApplication));\r\n\t// vscode.window.registerTerminalLinkProvider\r\n\tcontext.subscriptions.push(vscode.commands.registerCommand('vscode-sf.registerTerminalLinkProvider', () => {\r\n\t\t(<any>vscode.window).registerTerminalLinkProvider({\r\n\t\t\tprovideTerminalLinks: (context: any, token: vscode.CancellationToken) => {\r\n\t\t\t\t// Detect the first instance of the word \"link\" if it exists and linkify it\r\n\t\t\t\tconsole.log(context as string);\r\n\t\t\t\tconst startIndex = 0;//(context.line as string).indexOf('link');\r\n\t\t\t\tconst contextLength = (context.line as string).length;\r\n\t\t\t\tif (startIndex === contextLength) {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t\treturn [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstartIndex,\r\n\t\t\t\t\t\tlength: contextLength,\r\n\t\t\t\t\t\ttooltip: 'Show a notification',\r\n\t\t\t\t\t\t// You can return data in this object to access inside handleTerminalLink\r\n\t\t\t\t\t\tdata: (context.line as string) //'Example data'\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\t\t\t},\r\n\t\t\thandleTerminalLink: (link: any) => {\r\n\t\t\t\tvscode.window.showInformationMessage(`Link activated (data = ${link.data})`);\r\n\t\t\t}\r\n\t\t});\r\n\t}));\r\n}\r\n\r\n// this method is called when your extension is deactivated\r\nexport function deactivate() {\r\n\tif (terminal !== null) {\r\n\t\tterminal.disposeTerminal();\r\n\t}\r\n}\r\n"]}