{"version":3,"file":"extension.js","sourceRoot":"","sources":["../../src/extension.ts"],"names":[],"mappings":"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","sourcesContent":["//debugger;\r\n// The module 'vscode' contains the VS Code extensibility API\r\n// Import the module and reference it with the alias vscode in your code below\r\n\r\nimport * as vscode from 'vscode';\r\nimport * as pwsh from './commands/powershell-terminal';\r\nimport { addSFService } from './commands/add-sf-service';\r\nimport { buildApplication } from './commands/build-application';\r\nimport { cleanJavaApplication } from './commands/clean-application-java';\r\nimport { createApplication } from './commands/create-application';\r\nimport { deployApplication } from './commands/deploy-application';\r\nimport { publishApplication } from './commands/publish-application';\r\nimport { removeApplication } from './commands/remove-application';\r\nimport { upgradeApplication } from './commands/upgrade-application';\r\nconst terminal: pwsh.powershellTerminal = null;\r\n\r\n// this method is called when your extension is activated\r\n// your extension is activated the very first time the command is executed\r\nexport function activate(context: vscode.ExtensionContext) {\r\n\t// Use the console to output diagnostic information (console.log) and errors (console.error)\r\n\t// This line of code will only be executed once when your extension is activated\r\n\tthis.terminal = new pwsh.powershellTerminal();\r\n\tconsole.log('Congratulations, your extension \"service-fabric-services\" is now active!');\r\n\r\n\t// The command has been defined in the package.json file\r\n\t// Now provide the implementation of the command with registerCommand\r\n\t// The commandId parameter must match the command field in package.json\r\n\tlet disposable = vscode.commands.registerCommand('service-fabric-services.helloWorld', () => {\r\n\t\t// The code you place here will be executed every time your command is executed\r\n\r\n\t\t// Display a message box to the user\r\n\t\tvscode.window.showInformationMessage('Hello World from Service Fabric Reliable Services!');\r\n\t});\r\n\r\n\tcontext.subscriptions.push(disposable);\r\n\t// Registering all of the possible commands for interacting with a Service Fabric Project\r\n\tcontext.subscriptions.push(vscode.commands.registerCommand('vscode-sf.addSFService', addSFService));\r\n\tcontext.subscriptions.push(vscode.commands.registerCommand('vscode-sf.buildApplication', buildApplication));\r\n\tcontext.subscriptions.push(vscode.commands.registerCommand('vscode-sf.cleanJavaApplication', cleanJavaApplication));\r\n\tcontext.subscriptions.push(vscode.commands.registerCommand('vscode-sf.createApplication', createApplication));\r\n\tcontext.subscriptions.push(vscode.commands.registerCommand('vscode-sf.deployApplication', deployApplication));\r\n\tcontext.subscriptions.push(vscode.commands.registerCommand('vscode-sf.publishApplication', publishApplication));\r\n\tcontext.subscriptions.push(vscode.commands.registerCommand('vscode-sf.removeApplication', removeApplication));\r\n\tcontext.subscriptions.push(vscode.commands.registerCommand('vscode-sf.upgradeApplication', upgradeApplication));\r\n\t// vscode.window.registerTerminalLinkProvider\r\n\tcontext.subscriptions.push(vscode.commands.registerCommand('vscode-sf.registerTerminalLinkProvider', () => {\r\n\t\t(<any>vscode.window).registerTerminalLinkProvider({\r\n\t\t\tprovideTerminalLinks: (context: any, token: vscode.CancellationToken) => {\r\n\t\t\t\t// Detect the first instance of the word \"link\" if it exists and linkify it\r\n\t\t\t\tconsole.log(context as string);\r\n\t\t\t\tconst startIndex = 0;//(context.line as string).indexOf('link');\r\n\t\t\t\tconst contextLength = (context.line as string).length;\r\n\t\t\t\tif (startIndex === contextLength) {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t\treturn [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstartIndex,\r\n\t\t\t\t\t\tlength: contextLength,\r\n\t\t\t\t\t\ttooltip: 'Show a notification',\r\n\t\t\t\t\t\t// You can return data in this object to access inside handleTerminalLink\r\n\t\t\t\t\t\tdata: (context.line as string) //'Example data'\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\t\t\t},\r\n\t\t\thandleTerminalLink: (link: any) => {\r\n\t\t\t\tvscode.window.showInformationMessage(`Link activated (data = ${link.data})`);\r\n\t\t\t}\r\n\t\t});\r\n\t}));\r\n}\r\n\r\n// this method is called when your extension is deactivated\r\nexport function deactivate() {\r\n\tif (this.terminal !== null) {\r\n\t\tthis.terminal.disposeTerminal();\r\n\t}\r\n}\r\n"]}