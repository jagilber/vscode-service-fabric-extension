{"version":3,"file":"remove-application.js","sourceRoot":"","sources":["../../../src/commands/remove-application.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,iCAAiC;AACjC,qCAAoC;AACpC,MAAM,IAAI,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC;AAE3C,IAAI,mBAAmB,CAAC;AACxB,IAAI,sBAAsB,CAAC;AAE3B,IAAG,IAAI,CAAC,UAAU,EAAC;IACf,mBAAmB,GAAG,MAAM,CAAC;IAC7B,sBAAsB,GAAG,MAAM,CAAC;CACnC;KAEG;IACA,mBAAmB,GAAG,KAAK,CAAC;IAC5B,sBAAsB,GAAG,KAAK,CAAC;CAClC;AAED,SAAsB,iBAAiB;;QACnC,gBAAgB,EAAE,CAAC;IACvB,CAAC;CAAA;AAFD,8CAEC;AAED,SAAe,gBAAgB;;QAC3B,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,WAAW,CAAC;QAChB,IAAI,WAAW,CAAC;QAEhB,MAAM,YAAY,GAAiB,MAAM,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QACrF,MAAM,kBAAkB,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QAErE,MAAM,EAAE,CAAC,QAAQ,CAAC,kBAAkB,EAAE,MAAM,EAAE,UAAU,GAAG,EAAE,IAAI;YAC7D,IAAI,GAAG,EAAE;gBACL,MAAM,GAAG,CAAC;aACb;YACD,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC/B,WAAW,GAAG,WAAW,CAAC,2BAA2B,CAAC;YACtD,IAAI,WAAW,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnC,sBAAsB,CAAC,WAAW,CAAC,CAAC;aACvC;iBAAM;gBACH,wBAAwB,CAAC,WAAW,CAAC,CAAC;aACzC;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,WAAW,CAAC;IACvB,CAAC;CAAA;AAED,SAAS,sBAAsB,CAAC,WAAW;IACvC,IAAI,QAAQ,GAAoB,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;IAC9E,IAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAC;QAClC,IAAI,CAAC,kCAAkC,GAAG,WAAW,CAAC,iBAAiB,GAAG,GAAG,GAAG,WAAW,CAAC,cAAc,GAAG,UAAU,GAAG,WAAW,CAAC,UAAU,GAAG,SAAS,GAAG,WAAW,CAAC,SAAS,GAAG,cAAc,EAAE,UAAU,GAAG,EAAE,MAAM,EAAE,MAAM;YAChO,IAAI,GAAG,EAAE;gBACL,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,+BAA+B,CAAC,CAAC;gBAChE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,OAAO;aACV;QACL,CAAC,CAAC,CAAC;KACN;SACI,IAAG,IAAI,CAAC,UAAU,EAAC;QACpB,QAAQ,CAAC,QAAQ,CAAC,mDAAmD,GAAE,WAAW,CAAC,iBAAiB,GAAG,GAAG,GAAG,WAAW,CAAC,cAAc,GAAG,yCAAyC,GAAG,WAAW,CAAC,oBAAoB,GAAG,yCAAyC,GAAG,WAAW,CAAC,oBAAoB,GAAE,2CAA2C,CAAC,CAAC;QACpV,QAAQ,CAAC,IAAI,EAAE,CAAC;KACnB;IACD,oBAAoB,CAAC,QAAQ,CAAC,CAAC;AACnC,CAAC;AAED,SAAe,wBAAwB,CAAC,WAAW;;QAC/C,IAAI,QAAQ,GAAoB,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QAC9E,IAAI,WAAW,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1C,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAE;gBACpC,IAAI,CAAC,kCAAkC,GAAG,WAAW,CAAC,iBAAiB,GAAG,GAAG,GAAG,WAAW,CAAC,cAAc,EAAE,UAAU,GAAG,EAAE,MAAM,EAAE,MAAM;oBACrI,IAAI,GAAG,EAAE;wBACL,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,+BAA+B,CAAC,CAAC;wBAChE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACjB,OAAO;qBACV;gBACL,CAAC,CAAC,CAAC;aACN;iBACI,IAAI,IAAI,CAAC,UAAU,EAAE;gBACtB,QAAQ,CAAC,QAAQ,CAAC,mDAAmD,GAAE,WAAW,CAAC,iBAAiB,GAAG,GAAG,GAAG,WAAW,CAAC,cAAc,CAAC,CAAC;gBACzI,QAAQ,CAAC,IAAI,EAAE,CAAC;aACnB;SACJ;aACI;YACD,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAE;gBACpC,IAAI,CAAC,wDAAwD,EAAE,UAAU,GAAG,EAAE,MAAM,EAAE,MAAM;oBAC5F,IAAI,GAAG,EAAE;wBACL,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,+BAA+B,CAAC,CAAC;wBAChE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACjB,OAAO;qBACV;gBACD,CAAC,CAAC,CAAC;aACN;iBACI,IAAI,IAAI,CAAC,UAAU,EAAE;gBACtB,QAAQ,CAAC,QAAQ,CAAC,kEAAkE,CAAC,CAAC;gBACtF,QAAQ,CAAC,IAAI,EAAE,CAAC;aACnB;SACJ;QACD,oBAAoB,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;CAAA;AAED,SAAe,oBAAoB,CAAC,QAAwB;;QACxD,IAAI,GAAG,GAAiB,IAAI,CAAC;QAC7B,GAAG,GAAG,MAAM,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,cAAc,GAAG,sBAAsB,CAAC,CAAC;QAChF,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;YACpB,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,kDAAkD,CAAC,CAAC;YACnF,OAAO;SACN;QACD,MAAM,mBAAmB,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACpE,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,mBAAmB,CAAC,CAAC;QAC9C,QAAQ,CAAC,IAAI,EAAE,CAAC;IACpB,CAAC;CAAA","sourcesContent":["import * as vscode from 'vscode';\r\nimport * as vars from './osdetector'\r\nconst exec = require('child_process').exec;\r\n\r\nvar builScriptExtension;\r\nvar installScriptExtension;\r\n\r\nif(vars._isWindows){\r\n    builScriptExtension = '.cmd';\r\n    installScriptExtension = '.ps1';\r\n}\r\n\r\nelse{\r\n    builScriptExtension = '.sh';\r\n    installScriptExtension = '.sh';\r\n}\r\n\r\nexport async function removeApplication() {\r\n    connectToCluster();\r\n}\r\n\r\nasync function connectToCluster() {\r\n    var fs = require('fs');\r\n    var clusterData;\r\n    var clusterInfo;\r\n\r\n    const cloudProfile: vscode.Uri[] = await vscode.workspace.findFiles('**/Cloud.json');\r\n    const pathToCloudProfile = cloudProfile[0].fsPath.replace('/c:', '');\r\n\r\n    await fs.readFile(pathToCloudProfile, 'utf8', function (err, data) {\r\n        if (err) {\r\n            throw err;\r\n        }\r\n        clusterData = JSON.parse(data);\r\n        clusterInfo = clusterData.ClusterConnectionParameters;\r\n        if (clusterInfo.ClientCert.length > 0) {\r\n            connectToSecureCluster(clusterInfo);\r\n        } else {\r\n            connectToUnsecureCluster(clusterInfo);\r\n        }\r\n    });\r\n\r\n    return clusterInfo;\r\n}\r\n\r\nfunction connectToSecureCluster(clusterInfo) {\r\n    var terminal: vscode.Terminal = vscode.window.createTerminal('ServiceFabric');\r\n    if(vars._isLinux || vars._isMacintosh){       \r\n        exec('sfctl cluster select --endpoint ' + clusterInfo.ConnectionIPOrURL + ':' + clusterInfo.ConnectionPort + ' --cert ' + clusterInfo.ClientCert + ' --key ' + clusterInfo.ClientKey + ' --no-verify', function (err, stdout, stderr) {\r\n            if (err) {\r\n                vscode.window.showErrorMessage(\"Could not connect to cluster.\");\r\n                console.log(err);\r\n                return;\r\n            }\r\n        });\r\n    }\r\n    else if(vars._isWindows){\r\n        terminal.sendText(\"Connect-ServiceFabricCluster -ConnectionEndPoint \"+ clusterInfo.ConnectionIPOrURL + ':' + clusterInfo.ConnectionPort + \" -X509Credential -ServerCertThumbprint \" + clusterInfo.ServerCertThumbprint + \" -FindType FindByThumbprint -FindValue \" + clusterInfo.ClientCertThumbprint +\" -StoreLocation CurrentUser -StoreName My\");\r\n        terminal.show();\r\n    }\r\n    uninstallApplication(terminal);    \r\n}\r\n\r\nasync function connectToUnsecureCluster(clusterInfo) {\r\n    var terminal: vscode.Terminal = vscode.window.createTerminal('ServiceFabric');\r\n    if (clusterInfo.ConnectionIPOrURL.length > 0) {\r\n        if (vars._isLinux || vars._isMacintosh) {\r\n            exec('sfctl cluster select --endpoint ' + clusterInfo.ConnectionIPOrURL + ':' + clusterInfo.ConnectionPort, function (err, stdout, stderr) {\r\n                if (err) {\r\n                    vscode.window.showErrorMessage(\"Could not connect to cluster.\");\r\n                    console.log(err);\r\n                    return;\r\n                }\r\n            });\r\n        }\r\n        else if (vars._isWindows) {\r\n            terminal.sendText(\"Connect-ServiceFabricCluster -ConnectionEndPoint \"+ clusterInfo.ConnectionIPOrURL + ':' + clusterInfo.ConnectionPort);\r\n            terminal.show();\r\n        }\r\n    }\r\n    else {\r\n        if (vars._isLinux || vars._isMacintosh) {\r\n            exec('sfctl cluster select --endpoint http://localhost:19080', function (err, stdout, stderr) {\r\n            if (err) {\r\n                vscode.window.showErrorMessage(\"Could not connect to cluster.\");\r\n                console.log(err);\r\n                return;\r\n            }\r\n            });\r\n        }\r\n        else if (vars._isWindows) {\r\n            terminal.sendText(\"Connect-ServiceFabricCluster -ConnectionEndPoint localhost:19000\");\r\n            terminal.show();\r\n        }\r\n    }\r\n    uninstallApplication(terminal);\r\n}\r\n\r\nasync function uninstallApplication(terminal:vscode.Terminal) {\r\n    var uri: vscode.Uri[] = null;\r\n    uri = await vscode.workspace.findFiles('**/uninstall' + installScriptExtension);\r\n    if (uri.length < 1) {\r\n    vscode.window.showErrorMessage(\"An uninstall file was not found in the workspace\");\r\n    return;\r\n    }\r\n    const relativeInstallPath = vscode.workspace.asRelativePath(uri[0]);\r\n    terminal.sendText('./' + relativeInstallPath);\r\n    terminal.show();\r\n}"]}