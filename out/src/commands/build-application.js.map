{"version":3,"file":"build-application.js","sourceRoot":"","sources":["../../../src/commands/build-application.ts"],"names":[],"mappings":"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","sourcesContent":["import * as vscode from \"vscode\";\r\nimport { quickPickLanguage } from '../configureWorkspace/config-utils';\r\nimport { win32 } from \"path\";\r\nimport * as vars from './osdetector';\r\nimport { resolve } from \"url\";\r\n\r\nvar builScriptExtension;\r\nvar installScriptExtension;\r\n\r\nif(vars._isWindows){\r\n    builScriptExtension = '.cmd';\r\n    installScriptExtension = '.ps1';\r\n}\r\n\r\nelse{\r\n    builScriptExtension = '.sh';\r\n    installScriptExtension = '.sh';\r\n}\r\n\r\nexport async function buildApplication() {\r\n\r\n    var languageType;\r\n    const buildFiles: vscode.Uri[] = await vscode.workspace.findFiles('**/build.gradle');\r\n    if (buildFiles.length < 1)\r\n        languageType = 'C#';\r\n    else\r\n        languageType = 'Java';\r\n\r\n    const uris: vscode.Uri[] = await vscode.workspace.findFiles('**/Cloud.json');\r\n    if (uris.length < 1) {\r\n        createPublishProfile();\r\n    }\r\n\r\n    if (languageType === 'Java') {\r\n        buildGradleApplication();\r\n    } else if (languageType === 'C#') {\r\n        buildCSharpApplication(true);\r\n    }\r\n}\r\n\r\nexport async function buildGradleApplication() {\r\n\r\n    const uris: vscode.Uri[] = await vscode.workspace.findFiles('**/build.gradle');\r\n    if (uris.length < 1) {\r\n        vscode.window.showErrorMessage(\"A build.gradle file was not found in the workspace\");\r\n        return;\r\n    }\r\n\r\n    const projectPath = uris[0].path.replace('build.gradle', '');\r\n    let projectUri = vscode.Uri.parse(projectPath);\r\n\r\n    const terminal: vscode.Terminal = vscode.window.createTerminal('ServiceFabric');\r\n    terminal.sendText('gradle ');\r\n    terminal.show();\r\n}\r\n\r\nexport async function buildCSharpApplication(showTerminal:boolean) {\r\n    var uris: vscode.Uri[] = null;\r\n    uris = await vscode.workspace.findFiles('**/build' + builScriptExtension);\r\n    if (uris.length < 1) {\r\n        vscode.window.showErrorMessage(\"A build file was not found in the workspace\");\r\n        return 1;\r\n    }\r\n    const buildPath = uris[0].fsPath.replace('/c:', '');\r\n    replaceBuildPath(buildPath);\r\n    const relativeBuildPath = vscode.workspace.asRelativePath(uris[0]);\r\n    const terminal: vscode.Terminal = vscode.window.createTerminal('ServiceFabric');\r\n    var commands = \"./\" + relativeBuildPath ;\r\n    terminal.sendText(commands,true);\r\n    if (showTerminal) {\r\n        terminal.show();\r\n        return 0;\r\n    }\r\n    else {\r\n        //This is path for testing. To check whether the build command is successfully sent to terminal\r\n        terminal.show(true);\r\n        terminal.sendText('$? > TestCSharpApplication/out.out',true);\r\n        var fs = require('fs');\r\n        console.log(vscode.workspace.workspaceFolders[0].uri.fsPath);\r\n        var outpath = vscode.workspace.workspaceFolders[0].uri.fsPath+'/TestCSharpApplication/out.out';\r\n        var content;\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(function(){\r\n                content = fs.readFileSync(outpath, 'utf8');\r\n                if(content.includes('T'))\r\n                    resolve(0);\r\n                else\r\n                    reject(1);\r\n            },30000);\r\n        });\r\n    }\r\n}\r\n\r\nfunction replaceBuildPath(filePath) {\r\n    var fs = require('fs')\r\n    fs.readFile(filePath, 'utf8', function (err, data) {\r\n        if (err) {\r\n            return console.log(err);\r\n        }\r\n        var result = data.replace(/\\\\/g, \"/\");\r\n\r\n        fs.writeFile(filePath, result, 'utf8', function (err) {\r\n            if (err) return console.log(err);\r\n        });\r\n    });\r\n}\r\n\r\nasync function createPublishProfile() {\r\n    var publishParams = {\r\n        ClusterConnectionParameters: {\r\n            ConnectionIPOrURL: '',\r\n            ConnectionPort: '19080',\r\n            ClientKey: '',\r\n            ClientCert: '',\r\n            ServerCertThumbprint: '',\r\n            ClientCertThumbprint: ''\r\n        }\r\n    };\r\n    var publishParamsJson = JSON.stringify(publishParams, null, 4);\r\n\r\n    var uri: vscode.Uri[] = null;\r\n    var buildPath;\r\n    uri = await vscode.workspace.findFiles('**/install' + installScriptExtension);\r\n    if (uri.length < 1) {\r\n        vscode.window.showErrorMessage(\"An install file was not found in the workspace\");\r\n        return;\r\n    }\r\n    buildPath = uri[0].fsPath.replace('/c:', '').replace('install'+ installScriptExtension,'');\r\n\r\n    console.log('Build Path: '+buildPath);\r\n    var fs = require('fs');\r\n    fs.writeFile(buildPath + 'Cloud.json', publishParamsJson, 'utf8', function(err) {\r\n        if (err) throw err;\r\n        console.log('Completed!');\r\n    });\r\n}\r\n"]}