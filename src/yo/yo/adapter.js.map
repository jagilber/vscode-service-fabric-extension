{"version":3,"file":"adapter.js","sourceRoot":"","sources":["../../../yo/yo/adapter.ts"],"names":[],"mappings":";;AAAA,6BAA6B;AAC7B,mCAA2D;AAC3D,gDAA+C;AAC/C,kDAA0C;AAC1C,MAAM,MAAM,GAAG,OAAO,CAAC,iCAAiC,CAAC,CAAC;AAC1D,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,MAAM,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAE9B,MAAqB,WAAW;IAM/B;QAJO,QAAG,GAAG,MAAM,EAAE,CAAC;QAEd,cAAS,GAAW,EAAE,CAAC;QAG9B,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,IAAI,CAAC,UAAU,GAAG,eAAM,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;QACvD,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE3B,sCAAsC;QACtC,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,GAAG;YAC7B,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAEhD,IAAI,CAAC,SAAS,IAAI,GAAG,IAAI,IAAI,CAAC;YAC9B,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACjC,OAAO,IAAI,CAAC;QACb,CAAC,CAAC;QAEF,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG;YAChB,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAEhD,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC7B,OAAO,IAAI,CAAC;QACb,CAAC,CAAC;IACH,CAAC;IAEM,MAAM,CAAC,SAAS,EAAE,QAAQ;QAChC,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,QAAQ,GAAG,QAAQ,IAAI,cAAY,CAAC,CAAC;QAErC,MAAM,OAAO,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,EAAE;YACtD,OAAO,OAAO;iBACZ,IAAI,CAAC,GAAG,EAAE;gBACV,IAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,EAAE;oBAChC,OAAO,IAAI,CAAC;iBACZ;qBAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;oBAC/B,OAAO,mBAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC;iBACxC;gBAED,OAAO,QAAQ,CAAC,IAAI,CAAC;YACtB,CAAC,CAAC;iBACD,IAAI,CAAC,WAAW,CAAC,EAAE;gBACnB,IAAI,WAAW,EAAE;oBAChB,MAAM,MAAM,GAAG,iBAAa,CAAC,YAAY,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;oBAE7D,OAAO,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;iBACnH;YACF,CAAC,CAAC,CAAC;QACL,CAAC,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;QAEtB,OAAO,OAAO;aACZ,IAAI,CAAC,GAAG,EAAE;YACV,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;YACxB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAEvC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAClB,OAAO,OAAO,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,IAAI,CAAC,MAAM,EAAE,QAAQ;QAC3B,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QAExB,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QAE9C,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACjB,IAAI,MAAM,GAAG,GAAG,CAAC;YAEjB,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE;gBACxB,MAAM,GAAG,GAAG,CAAC;aACb;iBAAM,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;gBACjC,MAAM,GAAG,GAAG,CAAC;aACb;YAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;gBAC9C,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC7B,OAAO,IAAI,CAAC;iBACZ;gBAED,OAAO,GAAG,MAAM,GAAG,IAAI,EAAE,CAAA;YAC1B,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEd,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACJ,CAAC;CACD;AA1FD,8BA0FC","sourcesContent":["import * as util from 'util';\r\nimport { window, OutputChannel, ViewColumn } from 'vscode';\r\nimport PromptFactory from '../prompts/factory';\r\nimport runAsync from '../utils/run-async';\r\nconst logger = require('yeoman-environment/lib/util/log');\r\nconst diff = require('diff');\r\nconst isFn = require('is-fn');\r\n\r\nexport default class CodeAdapter {\r\n\r\n\tpublic log = logger();\r\n\tprivate outChannel: OutputChannel;\r\n\tprivate outBuffer: string = '';\r\n\r\n\tconstructor() {\r\n\t\tlet self = this;\r\n\r\n\t\tthis.outChannel = window.createOutputChannel('Yeoman');\r\n\t\tthis.outChannel.clear();\r\n\t\tthis.outChannel.show(true);\r\n\r\n\t\t// TODO Do not overwrite these methods\r\n\t\tconsole.error = console.log = function() {\r\n\t\t\tconst line = util.format.apply(util, arguments);\r\n\r\n\t\t\tself.outBuffer += `${line}\\n`;\r\n\t\t\tself.outChannel.appendLine(line);\r\n\t\t\treturn this;\r\n\t\t};\r\n\r\n\t\tthis.log.write = function() {\r\n\t\t\tconst line = util.format.apply(util, arguments);\r\n\r\n\t\t\tself.outBuffer += line;\r\n\t\t\tself.outChannel.append(line);\r\n\t\t\treturn this;\r\n\t\t};\r\n\t}\r\n\r\n\tpublic prompt(questions, callback) {\r\n\t\tlet answers = {};\r\n\t\tcallback = callback || function() {};\r\n\r\n\t\tconst promise = questions.reduce((promise, question) => {\r\n\t\t\treturn promise\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tif (question.when === undefined) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t} else if (isFn(question.when)) {\r\n\t\t\t\t\t\treturn runAsync(question.when)(answers);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn question.when;\r\n\t\t\t\t})\r\n\t\t\t\t.then(askQuestion => {\r\n\t\t\t\t\tif (askQuestion) {\r\n\t\t\t\t\t\tconst prompt = PromptFactory.createPrompt(question, answers);\r\n\r\n\t\t\t\t\t\treturn prompt.render().then(result => answers[question.name] = question.filter ? question.filter(result) : result);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}, Promise.resolve());\r\n\r\n\t\treturn promise\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis.outChannel.clear();\r\n\t\t\t\tthis.outChannel.append(this.outBuffer);\r\n\r\n\t\t\t\tcallback(answers);\r\n\t\t\t\treturn answers;\r\n\t\t\t});\r\n\t}\r\n\r\n\tpublic diff(actual, expected) {\r\n\t\tthis.outChannel.clear();\r\n\r\n\t\tlet result = diff.diffLines(actual, expected);\r\n\r\n\t\tresult.map(part => {\r\n\t\t\tlet prefix = ' ';\r\n\r\n\t\t\tif (part.added === true) {\r\n\t\t\t\tprefix = '+';\r\n\t\t\t} else if (part.removed === true) {\r\n\t\t\t\tprefix = '-';\r\n\t\t\t}\r\n\r\n\t\t\tpart.value = part.value.split('\\n').map(line => {\r\n\t\t\t\tif (line.trim().length === 0) {\r\n\t\t\t\t\treturn line;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn `${prefix}${line}`\r\n\t\t\t}).join('\\n');\r\n\r\n\t\t\tthis.outChannel.append(part.value);\r\n\t\t});\r\n\t}\r\n}\r\n"]}